name: daily-algorithm-alert

on:
  schedule:
    - cron: '0 11 * * *'   # Run daily at 8 PM
    # - cron: '0 11 * * 1'   # Run weekly on Mondays at 8 PM
    # - cron: '0 11 1 * *'  # Run monthly on the 1st at 8 PM

jobs:
  alert-build:
    runs-on: ubuntu-latest

    steps:

      - name: Set Timezone to Asia/Seoul
        run: sudo timedatectl set-timezone Asia/Seoul

      - name: Print Current time in workflow
        run: date

      - name: checkout repository
        uses: actions/checkout@v4

      #- name: POST algorithm repository daily alert to SLACK
      #  id: run-output-script
      #  run: bash shell-scripts/statistics-algorithm-java-files.sh

      - name: Check Java Files created or modified in various periods using git log
        run: |
          TODAY=$(date +%Y-%m-%d)
          PERIODS=("yesterday" "7 days ago" "30 days ago")
          LABELS=("Yesterday" "Last 7 Days" "Last 30 Days")
          COUNTS=()

          for i in ${!PERIODS[@]}; do
          START_DATE=$(date -d "${PERIODS[$i]}" +%Y-%m-%d)
          echo "Checking Java files created or modified between ${START_DATE} and ${TODAY}:"
          CHANGED_FILES=$(git log --since="${START_DATE}" --until="${TODAY}" --name-only --pretty="" -- "*.java" | sort | uniq)
          COUNT=$(echo "$CHANGED_FILES" | wc -l)
          COUNTS+=($COUNT)
          echo "${LABELS[$i]} Count: $COUNT"
          done

          DAILY_COUNT=${COUNTS[0]}
          WEEKLY_COUNT=${COUNTS[1]}
          MONTHLY_COUNT=${COUNTS[2]}
          
          echo -e "\e[31m+==================COUNT===================+";
          echo -e "\e[32mJava Files Created Yesterday: ${DAILY_COUNT}"
          echo -e "\e[32mJava Files Created Last 7 Days: ${WEEKLY_COUNT}"
          echo -e "\e[32mJava Files Created Last 30 Days: ${MONTHLY_COUNT}"
          echo -e "\e[31m+==================COUNT===================+";
  
          # if [ ${DAILY_COUNT} -lt 1 ]; then 
          #  MSG="더 분발해야 할 것 같아요!😂"
          # elif [ ${DAILY_COUNT} -ge 2 -a ${DAILY_COUNT} -lt 3 ]; then
          #  MSG="지금까지 잘하고 계시네요. 화이팅입니다!😘"
          # elif [ ${DAILY_COUNT} -ge 3 -a ${DAILY_COUNT} -lt 4 ]; then
          #  MSG="목표를 거의 달성하셨어요! 대단합니다.👏🏽"
          # else
          #  MSG="4 문제 이상 푸셔서, 존경스럽습니다.🎉"
          # fi
          
          # Slack Message Send & Statistics
          case ${DAILY_COUNT} in
            0)
              MSG="더 분발해야 할 것 같아요!😂"
              ;;
            2 | 3)
              MSG="지금까지 잘하고 계시네요. 화이팅입니다!😘"
              ;;
            4)
              MSG="목표를 거의 달성하셨어요! 대단합니다.👏🏽"
              ;;
            *)
              MSG="4 문제 이상 푸셔서, 존경스럽습니다.🎉"
              ;;
          esac
          
          DAILY_MSG="알고리즘 풀기에 딱 좋은 밤이네요!\n*오늘 날짜_(${TODAY})_기준으로, 벌써 *${NOW_YEAR}년 ${NOW_MONTH}월에 ${DAILY_COUNT}문제를 해결하셨어요!💪*\n📊통계를 보면, 이번 주에는 ${WEEKLY_COUNT}문제, 이번 달에는 ${MONTHLY_COUNT}문제를 푸셨습니다! ${MSG}\n자세한 내용을 보시려면 🔗<https://github.com/yeeooni/baekjoon-slove|여기>를 클릭하세요."
          
          # SLACK channel to SEND
          curl -X POST --data-urlencode "payload={\"text\": \"${DAILY_MSG}\"}" ${{ secrets.SLACK_WEBHOOKS_URL }}
          
            
          
          
          
